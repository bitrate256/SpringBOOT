plugins {
	id 'org.springframework.boot' version '2.6.7'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'

}

group = 'jpacrud.cms'
version = '0.1'
sourceCompatibility = '11'
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    implementation 'org.projectlombok:lombok:1.18.18'
	implementation 'org.projectlombok:lombok:1.18.18'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation("com.squareup.okhttp3:okhttp:4.9.1")


	//security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	// swagger
	implementation "io.springfox:springfox-boot-starter:3.0.0"
	implementation "io.springfox:springfox-swagger-ui:3.0.0"

	//jwt
	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	//goggle
	implementation 'com.google.code.gson:gson:2.8.6'
	implementation 'org.apache.commons:commons-text:1.9'
	implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'
	implementation "org.apache.tomcat.embed:tomcat-embed-jasper"


	//querydsl
	implementation "com.querydsl:querydsl-jpa:5.0.0"
	implementation "com.querydsl:querydsl-apt:5.0.0"
	implementation "com.querydsl:querydsl-core:5.0.0"

	//valid
	implementation 'org.springframework.boot:spring-boot-starter-validation'


}


tasks.named('test') {
	useJUnitPlatform()
}
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}
